import{_ as i,c as a,o as n,a0 as l}from"./chunks/framework.BZ6CujqG.js";const o=JSON.parse('{"title":"YAML语法","description":"","frontmatter":{},"headers":[],"relativePath":"YAML语法/index.md","filePath":"YAML语法/index.md"}'),e={name:"YAML语法/index.md"};function t(h,s,p,k,d,r){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="yaml语法" tabindex="-1">YAML语法 <a class="header-anchor" href="#yaml语法" aria-label="Permalink to &quot;YAML语法&quot;">​</a></h1><p>YAML是一种人类可读的数据序列化格式，常用于配置文件和数据交换。以下是YAML的主要语法：</p><h2 id="基本语法规则" tabindex="-1">基本语法规则 <a class="header-anchor" href="#基本语法规则" aria-label="Permalink to &quot;基本语法规则&quot;">​</a></h2><ol><li><p><strong>大小写敏感</strong>：YAML对大小写敏感，<code>true</code>和<code>True</code>是不同的值。</p></li><li><p><strong>缩进表示层级</strong>：使用空格进行缩进表示层级关系，不允许使用制表符。相同缩进层级的元素属于同一层级。</p></li></ol><h2 id="注释" tabindex="-1">注释 <a class="header-anchor" href="#注释" aria-label="Permalink to &quot;注释&quot;">​</a></h2><p>以<code>#</code>开头的行是注释，会被解析器忽略。</p><h2 id="标量" tabindex="-1">标量 <a class="header-anchor" href="#标量" aria-label="Permalink to &quot;标量&quot;">​</a></h2><ol><li><strong>字符串</strong>：可以直接书写，无需引号，例如：<code>name: John Doe</code></li></ol><p>如果字符串包含特殊字符或需要保留空格等格式，可以使用单引号或双引号，如：<code>description: &#39;This is a &quot;quoted&quot; string.&#39;</code></p><ol start="2"><li><p><strong>数字</strong>：直接书写，如<code>age: 30</code>。</p></li><li><p><strong>布尔值</strong>：使用<code>true</code>或<code>false</code>表示，如<code>is_active: true</code>。</p></li><li><p><strong>日期和时间</strong>：遵循特定的格式，如<code>2023-10-15</code>表示日期，<code>2023-10-15T12:00:00Z</code>表示时间（ISO 8601格式）。</p></li></ol><h2 id="序列" tabindex="-1">序列 <a class="header-anchor" href="#序列" aria-label="Permalink to &quot;序列&quot;">​</a></h2><p>也称为列表或数组，使用<code>-</code>作为列表项的开头，例如：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">fruits</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">apple</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">banana</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cherry</span></span></code></pre></div><p>也可以使用方括号表示法，如<code>fruits: [apple, banana, cherry]</code>。</p><h2 id="映射" tabindex="-1">映射 <a class="header-anchor" href="#映射" aria-label="Permalink to &quot;映射&quot;">​</a></h2><p>也称为字典或对象，由键值对组成，使用<code>:</code>分隔键和值，例如：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">person</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">John Doe</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  age</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  is_student</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span></code></pre></div><p>也可以使用花括号表示法，如：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">person</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">John Doe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  age</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  is_student</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="嵌套结构" tabindex="-1">嵌套结构 <a class="header-anchor" href="#嵌套结构" aria-label="Permalink to &quot;嵌套结构&quot;">​</a></h2><p>通过缩进可以创建嵌套的序列和映射，例如：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">employees</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">John Doe</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Developer</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    skills</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Python</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">JavaScript</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Jane Smith</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Designer</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    skills</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Photoshop</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Illustrator</span></span></code></pre></div><h2 id="引用和锚点" tabindex="-1">引用和锚点 <a class="header-anchor" href="#引用和锚点" aria-label="Permalink to &quot;引用和锚点&quot;">​</a></h2><p>可以使用<code>&amp;</code>定义锚点，然后使用<code>*</code>引用锚点，以避免重复定义相同的数据，例如：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">defaults</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">defaults</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  font</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Arial</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">black</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">defaults</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">12px</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">text_field</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">defaults</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">14px</span></span></code></pre></div><p>上述示例中，<code>&amp;defaults</code>定义了一个锚点，包含<code>font</code>和<code>color</code>属性。<code>button</code>和<code>text_field</code>通过<code>&lt;&lt;: *defaults</code>引用了这个锚点，并可以添加自己的额外属性。</p><p>这些是YAML的主要语法，通过组合这些语法，可以表示各种复杂的数据结构。</p>`,27)]))}const c=i(e,[["render",t]]);export{o as __pageData,c as default};
