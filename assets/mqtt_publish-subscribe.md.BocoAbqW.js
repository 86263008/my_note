import{_ as a,c as e,o as r,a0 as l}from"./chunks/framework.CUtHynuh.js";const b=JSON.parse('{"title":"发布/订阅模式","description":"","frontmatter":{"title":"发布/订阅模式","outline":"deep"},"headers":[],"relativePath":"mqtt/publish-subscribe.md","filePath":"mqtt/publish-subscribe.md"}'),o={name:"mqtt/publish-subscribe.md"};function i(s,t,n,h,p,c){return r(),e("div",null,t[0]||(t[0]=[l('<h1 id="发布-订阅模式" tabindex="-1">发布/订阅模式 <a class="header-anchor" href="#发布-订阅模式" aria-label="Permalink to &quot;发布/订阅模式&quot;">​</a></h1><p>介绍发布/订阅模式概念，即解耦消息发送和接收方；阐述MQTT发布/订阅模式的四个主要组成部分（发布者、订阅者、代理、主题）及其各自功能。</p><p><a href="https://www.emqx.com/zh/blog/mqtt-5-introduction-to-publish-subscribe-model" target="_blank" rel="noreferrer">https://www.emqx.com/zh/blog/mqtt-5-introduction-to-publish-subscribe-model</a></p><nav class="table-of-contents"><ul><li><a href="#mqtt-发布-订阅模式4-个主要组成部分">MQTT 发布/订阅模式4 个主要组成部分</a></li><li><a href="#消息路由">消息路由</a><ul><li><a href="#基于主题的消息路由">基于主题的消息路由</a></li><li><a href="#按消息内容路由">按消息内容路由</a></li></ul></li></ul></nav><h2 id="mqtt-发布-订阅模式4-个主要组成部分" tabindex="-1">MQTT 发布/订阅模式4 个主要组成部分 <a class="header-anchor" href="#mqtt-发布-订阅模式4-个主要组成部分" aria-label="Permalink to &quot;MQTT 发布/订阅模式4 个主要组成部分&quot;">​</a></h2><ol><li><p><strong>发布者</strong>：MQTT发布/订阅模式中的消息发送方，负责将消息发布到指定主题，无需关心订阅者是否在线。</p></li><li><p><strong>订阅者</strong>：消息接收方，可订阅一个或多个主题以接收感兴趣的消息，还支持共享订阅实现负载均衡。</p></li><li><p><strong>代理（Broker）</strong>：MQTT架构中的核心组件，负责接收发布者的消息，根据主题将消息转发给订阅者，同时处理客户端的连接、断开、订阅、取消订阅等请求。</p></li><li><p><strong>主题（Topic）</strong>：MQTT消息路由的基础，类似URL路径分层结构，使用斜杠“/”分隔，如“sensor/1/temperature”。支持通配符，方便订阅者一次订阅多个主题。</p></li></ol><h2 id="消息路由" tabindex="-1">消息路由 <a class="header-anchor" href="#消息路由" aria-label="Permalink to &quot;消息路由&quot;">​</a></h2><h3 id="基于主题的消息路由" tabindex="-1">基于主题的消息路由 <a class="header-anchor" href="#基于主题的消息路由" aria-label="Permalink to &quot;基于主题的消息路由&quot;">​</a></h3><p>MQTT的主要消息路由方式，订阅者订阅感兴趣的主题，发布者发布消息时携带主题，代理根据消息主题判断并转发给相应订阅者。</p><h3 id="按消息内容路由" tabindex="-1">按消息内容路由 <a class="header-anchor" href="#按消息内容路由" aria-label="Permalink to &quot;按消息内容路由&quot;">​</a></h3><p>EMQX从3.1版本开始，借助基于SQL的规则引擎实现的消息路由方式，订阅者可定义感兴趣消息的条件，满足条件的消息才会被投递。</p>',11)]))}const d=a(o,[["render",i]]);export{b as __pageData,d as default};
